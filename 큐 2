#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main() {
	int N;
	int b_idx = -1; // -1부터 시작을 하면 back할 때 b_idx가 항상 맨 마지막에 들어간 숫자를 가리키고 있다
	int f_idx = 0; // 맨 앞의 idx를 의미하며 -1로 시작할 경우 front하는 경우에 맨 앞 숫자를 뽑아낼 때 좀 더 복잡하기 때문에, 0부터 하면 항상 가장 앞에 있는 숫자를 가리키고 있다
	scanf("%d", &N);
	int* num_arr = (int*)calloc(N + 1, sizeof(int));
	for (int n = 0; n < N; n++) {
		int check = b_idx - f_idx; // check가 -1이면 배열은 비어있다
		char command[6] = { 0 };
		scanf("%s", command);
		if (strcmp(command, "push") == 0) scanf("%d", &num_arr[++b_idx]);
		else if (strcmp(command, "pop") == 0) check == -1 ? printf("%d\n", check) : printf("%d\n", num_arr[f_idx++]);
		else if (strcmp(command, "size") == 0) printf("%d\n", check + 1);
		else if (strcmp(command, "empty") == 0) check == -1 ? printf("%d\n", 1) : printf("%d\n", 0);
		else if (strcmp(command, "front") == 0) check == -1 ? printf("%d\n", check) : printf("%d\n", num_arr[f_idx]);
		else check == -1 ? printf("%d\n", check) : printf("%d\n", num_arr[b_idx]);
	}
	return 0;
}
